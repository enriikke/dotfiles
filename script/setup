#!/bin/bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# where am i?
WD=$(pwd -P)
if [ ! -f "$WD/script/setup" ]; then
  echo "whoa there! please run me from the root of the repo ‚ò∫Ô∏è"
  exit 1
fi

# are we on a mac or GH codespace? bootstrap!
if [ $(uname -s) = "Darwin" ]; then
  echo -e "\n${BLUE}‚û°Ô∏è Bootstrapping MacOS...\n${NC}"
  /bin/bash script/bootstrap-mac
else
  echo -e "\n${BLUE}‚û°Ô∏è Bootstrapping Linux...\n${NC}"
  sudo apt-get -qq update
  sudo apt-get -qq install curl exuberant-ctags fzf git gnupg httpie imagemagick jq mosh rbenv ripgrep tmux tree wget zsh

  # install gh cli
  echo -e "\n${BLUE}‚û°Ô∏è Installing gh cli...\n${NC}"
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
  && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
  && sudo apt update \
  && sudo apt install gh -y 

  # install 1P cli
  echo -e "\n${BLUE}‚û°Ô∏è Installing 1P cli...\n${NC}"
  curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg

  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" |
  sudo tee /etc/apt/sources.list.d/1password.list

  sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
  curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
  sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
  curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

  sudo apt update && sudo apt install 1password-cli

  # install neovim
  echo -e "\n${BLUE}‚û°Ô∏è Installing Neovim...\n${NC}"
  curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
  chmod u+x nvim.appimage
  sudo mv nvim.appimage /
  sudo ln -s /nvim.appimage /usr/bin/nvim
fi

# copy dotfiles
echo -e "\n${BLUE}‚û°Ô∏è Symlinking dotfiles...\n${NC}"
rm -rf $HOME/.config
for FILE in $WD/dots/*; do
  DOTFILE="$HOME/.$(basename $FILE)"
  ln -sf $FILE $DOTFILE
done

# install antibody (zsh plugin manager)
# https://getantibody.github.io
echo -e "\n${BLUE}‚û°Ô∏è Installing Antibody...\n${NC}"
curl -sfL git.io/antibody | sudo sh -s - -b /usr/local/bin

echo -e "\n${BLUE}‚û°Ô∏è Sourcing env vars...\n${NC}"
source $HOME/.config/zsh/exports.zsh

# rust
echo -e "\n${BLUE}‚û°Ô∏è Installing Rust...\n${NC}"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# node
echo -e "\n${BLUE}‚û°Ô∏è Installing Node to ${N_PREFIX}...\n${NC}"
curl -fsSL https://raw.githubusercontent.com/tj/n/master/bin/n | bash -s lts
npm install -g n

# install vim-plug (vim plugin manager)
# https://github.com/junegunn/vim-plug
echo -e "\n${BLUE}‚û°Ô∏è Installing Vim-Plug...\n${NC}"
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

# echo -e "\n${BLUE}‚û°Ô∏è Installing vim plugins...\n${NC}"
nvim +'PlugInstall --sync' +qall &> /dev/null || true

# change default shell to zsh
echo -e "\n${BLUE}‚û°Ô∏è Changing default shell to zsh...\n${NC}"
sudo chsh -s $(which zsh)

# utils
echo -e "\n${BLUE}‚û°Ô∏è Installing coworking-with...\n${NC}"
npm i -g @koddsson/coworking-with

# done
if [[ -n "$CODESPACES" ]]; then
  echo -e "\n${BLUE}‚û°Ô∏è Configuring Codespace...\n${NC}"

  if [[ "$GITHUB_REPOSITORY" == "github/github" && -f /workspaces/github/script/git-hooks/pre-push ]]; then
    # git hooks magic
    ln -s /workspaces/github/script/git-hooks/pre-push /workspaces/github/.git/hooks/pre-push
  fi

  if [[ -n "$PUSHOVER_API_TOKEN" ]]; then
    # send notification that dotfiles setup has completed
    curl --silent \
      --form-string "token=$PUSHOVER_API_TOKEN" \
      --form-string "user=$PUSHOVER_USER_KEY" \
      --form-string "message=üéâ Codespace $CODESPACE_NAME is ready! ‚ú®" \
      https://api.pushover.net/1/messages.json
  fi
fi
